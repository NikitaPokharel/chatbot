<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Therapy Bot</title>
    <link href="https://fonts.googleapis.com/css2?family=Indie+Flower&family=Poppins:ital,wght@0,100;0,200;0,300;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,900&family=Roboto:wght@100&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel='stylesheet' href='/stylesheets/style.css' />

    <style>
        li { list-style: none; }
        body{
        margin: 0;
        font-family: 'Indie Flower', cursive;
        color:#696969;

    }

    header{
        background-color: teal;
        color: white;
        padding: 1px;
        text-align: center;
        font-family: 'Roboto', sans-serif;

    }
    button{
        margin: 50px;
    }

    </style>
</head>
<body>
    <header>
        <h3>Therapy bot</h3>
    </header>
    <div class="container text-center ">

        <i class="fa fa-microphone" style="font-size:40px; margin-top: 250px;color: teal;"></i>
        <!-- <i class="fa-solid fa-stop"  style="font-size:40px; margin-top: 250px;margin-left:35px;color: teal;"></i> -->
    


        <br />
        <br />
        <br />

        <ul id="playlist"></ul>
    </div>

    
        <!-- <a id="download">Download</a>
        <button id="stop">Stop</button>
        <br />
        <audio id="player" controls></audio> -->
   

    <script>
        const button = document.querySelector('i');

        const options = {mimeType: 'audio/webm'};
        const buffer = [];
        var mediaRecorder = null;
        // start the recording
        const startRecording = function() {
            mediaRecorder.start();
            button.classList.toggle('btn-danger');
            button.removeEventListener('click', startRecording);
            button.addEventListener('click', stopRecording);
        }

        // stop the recording
        const stopRecording = function() {
            mediaRecorder.stop();
            // button.textContent = 'fa-microphone';
            button.classList.toggle('btn-danger');
            button.removeEventListener('click', stopRecording);
            button.addEventListener('click', startRecording);
        }

        // init the audio system
        const handleInit = function(stream) {
            // start recording with a click of the button
            button.addEventListener('click', startRecording);

            // the mediaRecord object that captures the stream
            mediaRecorder = new MediaRecorder(stream, options);

            // catches stream of bytearray
            mediaRecorder.addEventListener('dataavailable', function(e) {
                if (e.data.size > 0) buffer.push(e.data);
            });

            // when stopped, create a file and allow playback
            mediaRecorder.addEventListener('stop', function() {
                console.dir(buffer);
                // create a file
                const file = new File(buffer, 'audio.webm', {
                    type: 'audio/webm',
                    lastModified: Date.now()
                    
                });
                saveBlob(file, 'myRecording.wav');
                
                function saveBlob(blob, fileName) {
                var a = document.createElement("a");
                document.body.appendChild(a);
                a.style = "display: none";
        
                var url = window.URL.createObjectURL(blob);
                a.href = url;
                a.download = fileName;
                a.click();
                window.URL.revokeObjectURL(url);
            }

                
                

                // display the file via an Audio object
                // const li = document.createElement('li');
                // const player = new Audio(URL.createObjectURL(file));
                // player.controls = true;
                // li.appendChild(player);
                // document.querySelector('#playlist').appendChild(li);
                // buffer.length = 0; // empty the buffer for the next one
            });          
        };

        // init the stream from the audio device
        navigator.mediaDevices.getUserMedia({ audio: true, video: false })
            .then(handleInit);

    </script>
</body>
</html>